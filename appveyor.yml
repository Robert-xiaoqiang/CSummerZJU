environment:
  matrix:
    - QTDIR: C:\Qt\5.9\mingw53_32
      MINGW: C:\Qt\Tools\mingw53_32
#    - QTDIR: C:\Qt\5.9\msvc2017_64

configuration:
  - release

# Get the project submodules
# Set the environment variables and paths to make
install:
  - git submodule update --init --recursive
  - call "%QTDIR%\bin\qtenv2.bat"
  - set PATH=%PATH%;%QTDIR%\bin;%MINGW%\bin
  - if %QTDIR:msvc=%==%QTDIR% set make=mingw32-make.exe
  - if %QTDIR:_64=%==%QTDIR% ( set ARCH=x86 ) else set ARCH=x64
  - if not %QTDIR:msvc2015=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc2017=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc=%==%QTDIR% set make=nmake.exe
  - if not %QTDIR:msvc=%==%QTDIR% %make% /? > nul

# Run qmake
before_build:
  - cd %APPVEYOR_BUILD_FOLDER%
  #- cd View
  - qmake DSVision.pro


# Build the projects
build_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  #- cd View
  - '%make%'
  
  
after_build:
  - cd %APPVEYOR_BUILD_FOLDER%
  - cd release\
  - dir
  - windeployqt DSVision.exe
  

artifacts:
<<<<<<< HEAD
  - path: ./*-release.zip

deploy:
  provider: GitHub
  auth_token:
    secure: fb4671b648c786dcadc89c31998197c3a44843cc
  artifact: /.*\.zip/
  force_update: false
  on:
      branch: master
=======
  - path: release\
>>>>>>> 196abea0d9683d35fb49f777e0bd533c924466b2
